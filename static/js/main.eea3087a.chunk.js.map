{"version":3,"sources":["hooks.js","Note.jsx","NoteList.jsx","Storage.js","utils.js","App.jsx","index.js"],"names":["useStoredState","storage","key","defaultValue","useState","getItem","value","setValue","useEffect","setItem","Note","autoFocus","data","deleteDisabled","moveUpDisabled","moveDownDisabled","onDelete","onMove","onChange","className","title","target","placeholder","disabled","onClick","text","EMPTY_NOTE_DATA","namespace","this","window","localStorage","getNamespacedKey","undefined","JSON","parse","removeItem","stringifiedValue","stringify","reducer","state","action","type","newData","parameter","Error","getInitialState","keys","console","log","forEach","NoteList","setKeys","nextKey","setNextKey","useReducer","dispatch","makeOnMove","index","direction","arr","fromInd","toInd","length","newArr","splice","move","map","filter","k","App","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eea3087a.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport function useStoredState(storage, key, defaultValue) {\r\n  const [value, setValue] = useState(() => {\r\n    return storage.getItem(key, defaultValue);\r\n  });\r\n\r\n  useEffect(() => {\r\n    storage.setItem(key, value);\r\n  }, [storage, key, value]);\r\n\r\n  return [value, setValue];\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Note({\r\n  autoFocus,\r\n  data,\r\n  deleteDisabled,\r\n  moveUpDisabled,\r\n  moveDownDisabled,\r\n  onDelete,\r\n  onMove,\r\n  onChange,\r\n}) {\r\n  return (\r\n    <div className=\"Note\">\r\n      <input\r\n        value={data.title}\r\n        onChange={({ target }) => onChange('title', target.value)}\r\n        placeholder=\"Title\"\r\n      />\r\n      <button disabled={moveUpDisabled} onClick={() => onMove(-1)}>\r\n        ↑\r\n      </button>\r\n      <button disabled={moveDownDisabled} onClick={() => onMove(1)}>\r\n        ↓\r\n      </button>\r\n      <button disabled={deleteDisabled} onClick={onDelete}>\r\n        delete\r\n      </button>\r\n      <textarea\r\n        autoFocus={autoFocus}\r\n        value={data.text}\r\n        placeholder=\"Start typing...\"\r\n        onChange={({ target }) => onChange('text', target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useReducer, useEffect } from 'react';\nimport { useStoredState } from './hooks';\nimport { move } from './utils';\nimport LocalStorage from './Storage';\nimport Note from './Note';\n\nconst EMPTY_NOTE_DATA = {\n  title: '',\n  text: '',\n};\n\nconst storage = new LocalStorage('jottr');\nconsole.log(storage);\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'change':\n      const newData = {\n        ...EMPTY_NOTE_DATA,\n        ...state[action.key],\n        [action.parameter]: action.value,\n      };\n      storage.setItem(action.key, newData);\n      return {\n        ...state,\n        [action.key]: newData,\n      };\n    case 'delete':\n      storage.removeItem(action.key);\n      const { [action.key]: _deleted, ...rest } = state;\n      return rest;\n    default:\n      throw new Error(`Unexpected action type ${action.type}`);\n  }\n}\n\nfunction getInitialState(keys) {\n  console.log('gis', keys);\n  const state = {};\n  keys.forEach((key) => {\n    state[key] = storage.getItem(key);\n  });\n  return state;\n}\n\nexport default function NoteList() {\n  const [keys, setKeys] = useStoredState(storage, 'keys', []);\n  const [nextKey, setNextKey] = useStoredState(storage, 'nextKey', 0);\n  const [state, dispatch] = useReducer(reducer, keys, getInitialState);\n\n  useEffect(() => {\n    storage.setItem('version', 1); // will be helpful if the API ever changes\n  }, []);\n\n  const makeOnMove = (index) => (direction) => {\n    setKeys(move(keys, index, index + direction));\n  };\n\n  return (\n    <>\n      {[nextKey, ...keys].map((key, index) => (\n        <Note\n          key={key}\n          autoFocus={index === 0}\n          data={state[key] || EMPTY_NOTE_DATA}\n          moveUpDisabled={index <= 1}\n          moveDownDisabled={index === 0 || index === keys.length}\n          deleteDisabled={index === 0}\n          onMove={makeOnMove(index - 1)}\n          onChange={(parameter, value) => {\n            if (index === 0) {\n              setKeys([nextKey, ...keys]);\n              setNextKey(nextKey + 1);\n            }\n            dispatch({ type: 'change', key, value, parameter });\n          }}\n          onDelete={() => {\n            setKeys(keys.filter((k) => k !== key));\n            dispatch({ type: 'delete', key });\n          }}\n        />\n      ))}\n    </>\n  );\n}\n","// import { useEffect, useState } from 'react';\r\n\r\nexport default class LocalStorage {\r\n  constructor(namespace) {\r\n    this.namespace = namespace;\r\n    this.storage = window.localStorage;\r\n  }\r\n\r\n  getNamespacedKey(key) {\r\n    return this.namespace ? `${this.namespace}_${key}` : key;\r\n  }\r\n\r\n  getItem(key, defaultValue) {\r\n    const value = this.storage.getItem(this.getNamespacedKey(key));\r\n    return value === null && defaultValue !== undefined\r\n      ? defaultValue\r\n      : JSON.parse(value);\r\n  }\r\n\r\n  removeItem(key) {\r\n    this.storage.removeItem(this.getNamespacedKey(key));\r\n  }\r\n\r\n  setItem(key, value) {\r\n    const stringifiedValue = JSON.stringify(value);\r\n    this.storage.setItem(this.getNamespacedKey(key), stringifiedValue);\r\n  }\r\n\r\n  // useStoredState(key, defaultValue) {\r\n  //   const [value, setValue] = useState(() => {\r\n  //     return this.getItem(key, defaultValue);\r\n  //   });\r\n\r\n  //   useEffect(() => {\r\n  //     this.setItem(key, value);\r\n  //   }, [key, value]);\r\n\r\n  //   return [value, setValue];\r\n  // }\r\n}\r\n","export function move(arr, fromInd, toInd) {\r\n  if (toInd < 0 || toInd >= arr.length) return arr;\r\n\r\n  const newArr = [...arr];\r\n  const value = newArr.splice(fromInd, 1)[0];\r\n  newArr.splice(toInd, 0, value);\r\n  return newArr;\r\n}\r\n","import React from 'react';\r\nimport NoteList from './NoteList';\r\nimport './styles.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Jottr</h1>\r\n      <NoteList />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}