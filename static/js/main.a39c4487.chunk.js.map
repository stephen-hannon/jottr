{"version":3,"sources":["hooks.ts","components/Note.tsx","components/NoteList.tsx","Storage.ts","utils.ts","App.tsx","index.tsx"],"names":["useStoredState","storage","key","defaultValue","useState","getItem","value","setValue","useEffect","setItem","Note","data","deleteDisabled","moveUpDisabled","moveDownDisabled","onDelete","onMove","onChange","textRef","useRef","textHeight","setTextHeight","current","console","log","scrollHeight","Math","max","text","className","title","target","placeholder","disabled","onClick","ref","style","height","EMPTY_NOTE_DATA","namespace","this","window","localStorage","toString","getNamespacedKey","undefined","JSON","parse","removeItem","stringifiedValue","stringify","reducer","state","action","type","newData","parameter","getInitialState","keys","forEach","NoteList","setKeys","nextKey","setNextKey","useReducer","dispatch","makeOnMove","index","direction","arr","fromInd","toInd","length","newArr","splice","move","map","filter","k","App","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a39c4487.chunk.js","sourcesContent":["import { useEffect, useState, Dispatch, SetStateAction } from 'react';\nimport LocalStorage from './Storage';\n\nexport function useStoredState<T>(storage: LocalStorage, key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() => {\n    return storage.getItem(key, defaultValue);\n  });\n\n  useEffect(() => {\n    storage.setItem(key, value);\n  }, [storage, key, value]);\n\n  return [value, setValue];\n}\n","import React, { useRef, useEffect, useState } from 'react';\r\n\r\ninterface ComponentProps {\r\n  data: {\r\n    title: string;\r\n    text: string;\r\n  };\r\n  deleteDisabled?: boolean;\r\n  moveUpDisabled?: boolean;\r\n  moveDownDisabled?: boolean;\r\n  onDelete?: (event: React.MouseEvent) => void;\r\n  onMove: (delta: number) => void;\r\n  onChange: (parameter: string, newValue: string) => void;\r\n}\r\n\r\nconst Note: React.FC<ComponentProps> = ({\r\n  data,\r\n  deleteDisabled,\r\n  moveUpDisabled,\r\n  moveDownDisabled,\r\n  onDelete,\r\n  onMove,\r\n  onChange,\r\n}) => {\r\n  const textRef = useRef<HTMLTextAreaElement>(null);\r\n  const [textHeight, setTextHeight] = useState<number>(150);\r\n\r\n  useEffect(() => {\r\n    if (!textRef.current) return;\r\n\r\n    console.log(textRef.current.scrollHeight)\r\n    setTextHeight(Math.max(textRef.current.scrollHeight, 150));\r\n  }, [data.text]);\r\n\r\n  return (\r\n    <div className=\"Note\">\r\n      <input\r\n        value={data.title}\r\n        onChange={({ target }) => onChange('title', target.value)}\r\n        placeholder=\"Title\"\r\n      />\r\n      <button disabled={moveUpDisabled} onClick={() => onMove(-1)}>\r\n        ↑\r\n      </button>\r\n      <button disabled={moveDownDisabled} onClick={() => onMove(1)}>\r\n        ↓\r\n      </button>\r\n      <button disabled={deleteDisabled} onClick={onDelete}>\r\n        delete\r\n      </button>\r\n      <textarea\r\n        // TODO: Autofocus first textarea on page load\r\n        ref={textRef}\r\n        style={{height: textHeight}}\r\n        value={data.text}\r\n        placeholder=\"Start typing...\"\r\n        onChange={({ target }) => onChange('text', target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;","import React, { useReducer, useEffect } from 'react';\n\nimport { useStoredState } from 'hooks';\nimport { move } from 'utils';\nimport LocalStorage from 'Storage';\nimport Note from './Note';\n\nconst EMPTY_NOTE_DATA = {\n  title: '',\n  text: '',\n};\n\nconst storage = new LocalStorage('jottr');\n\ninterface NoteState {\n  [key: number]: { // TODO: make this reusable\n    title: string;\n    text: string;\n  };\n}\n\ntype NoteAction = {\n  type: 'change';\n  key: number;\n  parameter: string;\n  value: string;\n} | {\n  type: 'delete';\n  key: number;\n};\n\nfunction reducer(state: NoteState, action: NoteAction) {\n  switch (action.type) {\n    case 'change':\n      const newData = {\n        ...EMPTY_NOTE_DATA,\n        ...state[action.key],\n        [action.parameter]: action.value,\n      };\n      storage.setItem(action.key, newData);\n      return {\n        ...state,\n        [action.key]: newData,\n      };\n    case 'delete':\n      storage.removeItem(action.key);\n      const { [action.key]: _deleted, ...rest } = state;\n      return rest;\n  }\n}\n\nfunction getInitialState(keys: number[]): NoteState {\n  console.log('gis', keys);\n  const state: NoteState = {};\n  keys.forEach((key) => {\n    state[key] = storage.getItem<number>(key);\n  });\n  return state;\n}\n\nexport default function NoteList() {\n  const [keys, setKeys] = useStoredState<number[]>(storage, 'keys', []);\n  const [nextKey, setNextKey] = useStoredState(storage, 'nextKey', 0);\n  const [state, dispatch] = useReducer(reducer, keys, getInitialState);\n\n  useEffect(() => {\n    storage.setItem('version', 1); // will be helpful if the API ever changes\n  }, []);\n\n  const makeOnMove = (index: number) => (direction: number) => {\n    setKeys(move(keys, index, index + direction));\n  };\n\n  return (\n    <>\n      {[nextKey, ...keys].map((key, index) => (\n        <Note\n          key={key}\n          data={state[key] || EMPTY_NOTE_DATA}\n          moveUpDisabled={index <= 1}\n          moveDownDisabled={index === 0 || index === keys.length}\n          deleteDisabled={index === 0}\n          onMove={makeOnMove(index - 1)}\n          onChange={(parameter, value) => {\n            if (index === 0) {\n              setKeys([nextKey, ...keys]);\n              setNextKey(nextKey + 1);\n            }\n            dispatch({ type: 'change', key, value, parameter });\n          }}\n          onDelete={() => {\n            setKeys(keys.filter((k) => k !== key));\n            dispatch({ type: 'delete', key });\n          }}\n        />\n      ))}\n    </>\n  );\n}\n","// import { useEffect, useState } from 'react';\r\n\r\ntype KeyType = string | number;\r\n\r\nexport default class LocalStorage {\r\n  private namespace?: string;\r\n  private storage: Storage;\r\n\r\n  constructor(namespace?: string) {\r\n    this.namespace = namespace;\r\n    this.storage = window.localStorage;\r\n  }\r\n\r\n  getNamespacedKey(key: KeyType): string {\r\n    return this.namespace ? `${this.namespace}_${key}` : key.toString();\r\n  }\r\n\r\n  getItem<T>(key: KeyType, defaultValue?: T) {\r\n    const value = this.storage.getItem(this.getNamespacedKey(key));\r\n    return value === null && defaultValue !== undefined\r\n      ? defaultValue\r\n      : JSON.parse(value as string);\r\n  }\r\n\r\n  removeItem(key: KeyType) {\r\n    this.storage.removeItem(this.getNamespacedKey(key));\r\n  }\r\n\r\n  setItem(key: KeyType, value: unknown) {\r\n    const stringifiedValue = JSON.stringify(value);\r\n    this.storage.setItem(this.getNamespacedKey(key), stringifiedValue);\r\n  }\r\n\r\n  // useStoredState(key, defaultValue) {\r\n  //   const [value, setValue] = useState(() => {\r\n  //     return this.getItem(key, defaultValue);\r\n  //   });\r\n\r\n  //   useEffect(() => {\r\n  //     this.setItem(key, value);\r\n  //   }, [key, value]);\r\n\r\n  //   return [value, setValue];\r\n  // }\r\n}\r\n","export function move<T>(arr: T[], fromInd: number, toInd: number): T[] {\r\n  if (toInd < 0 || toInd >= arr.length) return arr;\r\n\r\n  const newArr = [...arr];\r\n  const value = newArr.splice(fromInd, 1)[0];\r\n  newArr.splice(toInd, 0, value);\r\n  return newArr;\r\n}\r\n","import React from 'react';\r\n\r\nimport NoteList from 'components/NoteList';\r\nimport './styles.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Jottr</h1>\r\n      <NoteList />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}